@model IEnumerable<IndiaBookApp.Models.Book>

@{
    ViewData["Title"] = "Index";
    var currentFilter = ViewData["CurrentFilter"] as string;
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<div style="margin-bottom: 20px;">
    <input type="text" id="Search" name="searchString" placeholder="Search..." value="@currentFilter" oninput="filterBooks()" />
</div>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Author)</th>
            <th>@Html.DisplayNameFor(model => model.Country)</th>
            <th>@Html.DisplayNameFor(model => model.ImageLink)</th>
            <th>@Html.DisplayNameFor(model => model.Language)</th>
            <th>@Html.DisplayNameFor(model => model.Link)</th>
            <th>@Html.DisplayNameFor(model => model.Pages)</th>
            <th>@Html.DisplayNameFor(model => model.Title)</th>
            <th>@Html.DisplayNameFor(model => model.Year)</th>
            <th></th>
        </tr>
    </thead>
    <tbody id="bookList">
        @foreach (var item in Model) {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Author)</td>
                <td>@Html.DisplayFor(modelItem => item.Country)</td>
                <td><img src="@Html.DisplayFor(modelItem => item.ImageLink)" /></td>
                <td>@Html.DisplayFor(modelItem => item.Language)</td>
                <td><a href="@Html.DisplayFor(modelItem => item.Link)">@item.Link</a></td>
                <td>@Html.DisplayFor(modelItem => item.Pages)</td>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.Year)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        function filterBooks() {
            const input = document.getElementById('Search');
            const filter = input.value.toLowerCase();
            const table = document.getElementById('bookList');
            const rows = table.getElementsByTagName('tr');

            for (let i = 0; i < rows.length; i++) {
                let cells = rows[i].getElementsByTagName('td');
                let match = false;

                for (let j = 0; j < cells.length; j++) {
                    if (cells[j]) {
                        const cellValue = cells[j].textContent || cells[j].innerText;
                        if (cellValue.toLowerCase().indexOf(filter) > -1) {
                            match = true;
                            break;
                        }
                    }
                }

                if (match) {
                    rows[i].style.display = '';
                } else {
                    rows[i].style.display = 'none';
                }
            }
        }
    </script>
}